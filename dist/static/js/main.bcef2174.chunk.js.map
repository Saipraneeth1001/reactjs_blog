{"version":3,"sources":["Components/Layouts/SignedIn.js","Components/Store/actions/authActions.js","Components/Layouts/SignedOut.js","Components/Layouts/Navbar.js","Components/Dashboard/Notifications.js","Components/Projects/ProjectSummary.js","Components/Projects/ProjectList.js","Components/Dashboard/Dashboard.js","Components/Projects/ProjectDetails.js","Components/Auth/SignIn.js","Components/Auth/SignUp.js","Components/Projects/CreateProject.js","Components/Store/actions/projectActions.js","App.js","serviceWorker.js","Components/Store/Reducers/authReducer.js","Components/Store/Reducers/projectReducer.js","Components/Store/Reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOut","state","firebase","links","uid","Layouts_SignedIn","Layouts_SignedOut","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Projects_ProjectSummary","Dashboard","_this$props","this","Projects_ProjectList","Dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","lastName","firstName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","Layouts_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0QAoBeA,cAAQ,KALI,SAACC,GACxB,MAAO,CACHC,QAAU,kBAAMD,ECDd,SAACA,EAAUE,EAAXC,IACeC,EADwBD,EAAjBC,eAEfC,OAAOJ,UAAUK,KAAK,WAC3BN,EAAS,CAAEO,KAAK,2BDCbR,CAfE,SAACS,GAEd,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,mBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,WACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAAmCJ,EAAMQ,QAAQC,cEG5EC,EAVG,WAEd,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCeDf,cANS,SAACoB,GACrB,MAAM,CACFd,KAAMc,EAAMC,SAASf,KACrBW,QAAQG,EAAMC,SAASJ,UAGhBjB,CAlBA,SAACS,GAAU,IACdH,EAAiBG,EAAjBH,KAAKW,EAAYR,EAAZQ,QACPK,EAAQhB,EAAKiB,IAAMb,EAAAC,EAAAC,cAACY,EAAD,CAAUP,QAASA,IAAYP,EAAAC,EAAAC,cAACa,EAAD,MACxD,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,cAAvB,QACES,uBCeHI,EAzBO,SAACjB,GAAS,IACpBkB,EAAkBlB,EAAlBkB,cACR,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACRc,GAAiBA,EAAcC,IAAI,SAAAC,GACjC,OACInB,EAAAC,EAAAC,cAAA,MAAIkB,IAAKD,EAAKE,IACVrB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAagB,EAAKG,KAAlC,KACAtB,EAAAC,EAAAC,cAAA,YAAOiB,EAAKI,QAAZ,KACAvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVqB,IAAOL,EAAKM,KAAKC,UAAUC,mBCFrDC,EAZQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QAErB,OACQ9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc2B,EAAQC,OACtC/B,EAAAC,EAAAC,cAAA,sBAAc4B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDjC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaqB,IAAOM,EAAQI,UAAUR,UAAUS,eCWlEC,EAjBK,SAAAP,GAAe,IAAbQ,EAAaR,EAAbQ,SAClB,OAEIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACTkC,GAAYA,EAASnB,IAAI,SAAAY,GACvB,OACI9B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAM,YAAYyB,EAAQT,GAAID,IAAKU,EAAQT,IAC7CrB,EAAAC,EAAAC,cAACoC,EAAD,CAAgBR,QAAWA,yBCH7CS,mLACM,IAAAC,EACoCC,KAAK1C,MAAtCsC,EADHG,EACGH,SAAUzC,EADb4C,EACa5C,KAAMqB,EADnBuB,EACmBvB,cACvB,OAAIrB,EAAKiB,IAELb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACwC,EAAD,CAAaL,SAAYA,KAE7BrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAACyC,EAAD,CAAe1B,cAAeA,OARzBjB,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAI,mBAHnBwC,aA2BTC,cACXxD,YAVoB,SAACoB,GACrB,MAAM,CACF2B,SAAU3B,EAAMqC,UAAUC,QAAQX,SAClCzC,KAAOc,EAAMC,SAASf,KACtBqB,cAAeP,EAAMqC,UAAUC,QAAQ/B,iBAO3CgC,2BAAiB,CACb,CAAEC,WAAY,WAAWC,QAAQ,CAAC,YAAY,SAC9C,CAACD,WAAY,gBAAgBE,MAAM,EAAED,QAAQ,CAAC,OAAO,WAJ9CL,CAMbP,GCMaO,cACXxD,YAZoB,SAACoB,EAAM2C,GAC3B,IAAMhC,EAAKgC,EAASC,MAAMC,OAAOlC,GAC3BgB,EAAW3B,EAAMqC,UAAUS,KAAKnB,SAEtC,MAAM,CACFP,QAFYO,EAAWA,EAAShB,GAAI,KAGpCzB,KAAMc,EAAMC,SAASf,QAOzBqD,2BAAiB,CAAC,CACdC,WAAa,cAHNJ,CAxCQ,SAAC/C,GAAU,IACtB+B,EAAY/B,EAAZ+B,QAER,OADiB/B,EAATH,KACCiB,IACNiB,EAEC9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc2B,EAAQC,OACtC/B,EAAAC,EAAAC,cAAA,SAAK4B,EAAQP,UAEjBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,wBAAiB4B,EAAQE,gBAAzB,IAA2CF,EAAQG,gBACnDjC,EAAAC,EAAAC,cAAA,WAAMsB,IAAOM,EAAQI,UAAUR,UAAUS,eAQ7CnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,yDApBKF,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAI,sBCLjCoD,6MACF/C,MAAM,CACFgD,MAAM,GACNC,SAAS,MAEbC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO7C,GAAKwC,EAAEK,OAAOC,WAGhCC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAK/D,MAAMuE,OAAOR,EAAKpD,gFAElB,IAAA8B,EACsBC,KAAK1C,MAAxBwE,EADH/B,EACG+B,UACR,OAFK/B,EACa5C,KACViB,IAAYb,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAI,MAE9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMsE,SAAY/B,KAAK2B,aAAcjE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOuE,QAAQ,SAAf,SACAzE,EAAAC,EAAAC,cAAA,SAAOJ,KAAO,QAAQuB,GAAG,QAAQqD,SAAUjC,KAAKmB,gBAEpD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOuE,QAAQ,YAAf,YACAzE,EAAAC,EAAAC,cAAA,SAAOJ,KAAO,WAAWuB,GAAG,WAAWqD,SAAUjC,KAAKmB,gBAE1D5D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACToE,EAAYvE,EAAAC,EAAAC,cAAA,SAAIqE,GAAe,eA/BpC1B,aAmDNvD,cAbS,SAACoB,GACrB,MAAM,CACF6D,UAAY7D,EAAMd,KAAK2E,UACvB3E,KAAMc,EAAMC,SAASf,OAGF,SAACL,GACxB,MAAO,CAEH+E,OAAQ,SAACK,GAAD,OAAiBpF,ERpDX,SAACoF,GAEnB,OAAM,SAACpF,EAAUE,EAAXoC,IACelC,EADwBkC,EAAjBlC,eAEfC,OAAOgF,2BACZD,EAAYjB,MACZiB,EAAYhB,UACd9D,KAAK,WACHN,EAAS,CAAEO,KAAK,oBACjB+E,MAAM,SAACC,GACNvF,EAAS,CAAEO,KAAK,cAAegF,WQ0CDR,CAAOK,OAIlCrF,CAA6CmE,GCnDtDsB,6MACFrE,MAAM,CACFgD,MAAM,GACNC,SAAS,GACTqB,SAAS,GACTC,UAAU,MAEdrB,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO7C,GAAKwC,EAAEK,OAAOC,WAGhCC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAK/D,MAAMmF,OAAOpB,EAAKpD,gFAGlB,IAAA8B,EACsBC,KAAK1C,MAAxBH,EADH4C,EACG5C,KAAK2E,EADR/B,EACQ+B,UACb,OAAG3E,EAAKiB,IAAYb,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAI,MAE9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMsE,SAAY/B,KAAK2B,aAAcjE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOuE,QAAQ,SAAf,SACAzE,EAAAC,EAAAC,cAAA,SAAOJ,KAAO,QAAQuB,GAAG,QAAQqD,SAAUjC,KAAKmB,gBAEpD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOuE,QAAQ,YAAf,YACAzE,EAAAC,EAAAC,cAAA,SAAOJ,KAAO,WAAWuB,GAAG,WAAWqD,SAAUjC,KAAKmB,gBAE1D5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOuE,QAAQ,aAAf,cACAzE,EAAAC,EAAAC,cAAA,SAAOJ,KAAO,OAAOuB,GAAG,YAAYqD,SAAUjC,KAAKmB,gBAEvD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOuE,QAAQ,YAAf,aACAzE,EAAAC,EAAAC,cAAA,SAAOJ,KAAO,OAAOuB,GAAG,WAAWqD,SAAUjC,KAAKmB,gBAEtD5D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACToE,EAAWvE,EAAAC,EAAAC,cAAA,SAAKqE,GAAgB,eA1CrC1B,aA8DNvD,cAbS,SAACoB,GAErB,MAAM,CACFd,KAAKc,EAAMC,SAASf,KACpB2E,UAAU7D,EAAMd,KAAK2E,YAGH,SAAChF,GACvB,MAAO,CACH2F,OAAS,SAACC,GAAD,OAAa5F,ETxCR,SAAC4F,GAEnB,OAAO,SAAC5F,EAASE,EAAV2F,GAAoD,IAA/BzF,EAA+ByF,EAA/BzF,YAAa0F,EAAkBD,EAAlBC,aAC/B1E,EAAWhB,IACXoD,EAAYsC,IAElB1E,EAASf,OAAO0F,+BACZH,EAAQzB,MACRyB,EAAQxB,UACV9D,KAAK,SAAC0F,GACJ,OAAOxC,EAAUG,WAAW,SAASsC,IAAID,EAAKjE,KAAKT,KAAK4E,IAAI,CACxDR,UAAUE,EAAQF,UAClBD,SAASG,EAAQH,SACjBxE,SAAS2E,EAAQF,UAAU,GAAGE,EAAQH,SAAS,OAEpDnF,KAAK,WACJN,EAAS,CAACO,KAAK,qBAChB+E,MAAM,SAACC,GACNvF,EAAS,CAACO,KAAK,eAAegF,WSsBHI,CAAOC,OAI/B7F,CAA4CyF,WC9DrDW,6MACFhF,MAAM,CACFqB,MAAM,GACNR,QAAQ,MAEZqC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO7C,GAAKwC,EAAEK,OAAOC,WAGhCC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAK/D,MAAM4F,cAAc7B,EAAKpD,OAC9BoD,EAAK/D,MAAM6F,QAAQC,KAAK,8EAIxB,OADiBpD,KAAK1C,MAAdH,KACCiB,IAELb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMsE,SAAY/B,KAAK2B,aAAcjE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOuE,QAAQ,SAAf,SACAzE,EAAAC,EAAAC,cAAA,SAAOJ,KAAO,OAAOuB,GAAG,QAAQqD,SAAUjC,KAAKmB,gBAEnD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOuE,QAAQ,WAAf,WACAzE,EAAAC,EAAAC,cAAA,YAAUmB,GAAG,UAAUlB,UAAU,uBAAuBuE,SAAUjC,KAAKmB,gBAE3E5D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,YAbSH,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAI,mBAjBfwC,aAiDbvD,cAbS,SAACoB,GACrB,MAAO,CACHd,KAAMc,EAAMC,SAASf,OAIF,SAACL,GAE1B,MAAM,CACJoG,cAAe,SAAC7D,GAAD,OAAavC,ECjDH,SAACuC,GAC1B,OAAO,SAACvC,EAAUE,EAAXoC,GAAsDA,EAAhClC,YAAgC,IAEnDoD,GAAYsC,EAFuCxD,EAAnBwD,gBAGhC9E,EAAUd,IAAWkB,SAASJ,QAC9BuF,EAAWrG,IAAWkB,SAASf,KAAKiB,IAC1CkC,EAAUG,WAAW,YAAY6C,IAAjC/B,OAAAgC,EAAA,EAAAhC,CAAA,GACOlC,EADP,CACeE,gBAAgBzB,EAAQ0E,UACnChD,eAAe1B,EAAQyE,SACvBc,SAASA,EACT5D,UAAU,IAAI+D,QACfpG,KAAK,WACJN,EAAS,CAAEO,KAAM,iBAAkBgC,cACpC+C,MAAM,SAACC,GACNvF,EAAS,CAACO,KAAK,uBAAuBgF,WDmCTa,CAAc7D,OAIxCxC,CAA6CoG,GEvB7CQ,mLAnBT,OACElG,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiG,EAAD,MACAnG,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOwD,OAAK,EAACC,KAAO,IAAIC,UAAW/D,IACnCvC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOyD,KAAO,eAAeC,UAAYC,IACzCvG,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOyD,KAAO,UAAUC,UAAW7C,IACnCzD,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOyD,KAAM,UAAUC,UAAWvB,IAClC/E,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOyD,KAAK,UAAUC,UAAWZ,cAX3B7C,aCEA2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrD,MACvB,2DClBN,IAAMsD,EAAY,GAsCHC,EApCK,WAA+B,IAA9BnG,EAA8BoG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAOC,EAAOnH,MAEV,IAAK,cAED,OADAoH,QAAQC,IAAI,SACLnD,OAAAgC,EAAA,EAAAhC,CAAA,GACAtD,EADP,CAEI6D,UAAW,iBAEnB,IAAK,gBAED,OADA2C,QAAQC,IAAI,uBACZnD,OAAAgC,EAAA,EAAAhC,CAAA,GACOtD,EADP,CAEI6D,UAAU,OAElB,IAAM,kBAEF,OADA2C,QAAQC,IAAI,oBACLzG,EACX,IAAK,iBAED,OADAwG,QAAQC,IAAI,kBACZnD,OAAAgC,EAAA,EAAAhC,CAAA,GACOtD,EADP,CAEI6D,UAAU,OAElB,IAAK,eAED,OADA2C,QAAQC,IAAI,SACZnD,OAAAgC,EAAA,EAAAhC,CAAA,GACOtD,EADP,CAEI6D,UAAW0C,EAAOnC,IAAIsC,UAG9B,QACI,OAAO1G,IClCbkG,EAAY,CACdvE,SAAS,CACL,CAAChB,GAAG,IAAIU,MAAM,mBAAmBR,QAAQ,eACzC,CAACF,GAAG,IAAIU,MAAM,oBAAoBR,QAAQ,eAC1C,CAACF,GAAG,IAAIU,MAAM,oBAAoBR,QAAQ,iBAiBnC8F,EAbQ,WAA+B,IAA9B3G,EAA8BoG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAOC,EAAOnH,MAEV,IAAK,iBAED,OADAoH,QAAQC,IAAI,uBAAwBF,EAAOnF,SACpCpB,EACX,IAAK,uBAED,OADAwG,QAAQC,IAAI,gBAAiBF,EAAOnC,KAC7BpE,EACX,QACI,OAAOA,YCNJ4G,EANKC,YAAgB,CAChC3H,KAAKiH,EACL/E,QAAQuF,EACRtE,UAAWyE,mBACX7G,SAAS8G,4DCMX9G,IAAS+G,cAVW,CAClBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,wCAITtH,IAASoC,YAEMpC,QAAf,ECLIuH,EAAQC,YAAYb,EAAYxE,YAClCsF,YAAgBC,IAAMC,kBAAkB,CAAC3I,0BAAa0F,+BACtDkD,yBAAeC,GAAUC,6BAAmBD,EAAU,CAACE,wBAAuB,EAAMC,YAAY,QAASC,mBAAoB,MAIjIV,EAAMW,oBAAoBhJ,KAAK,WAC3BiJ,IAASC,OAAO/I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAUd,MAAOA,GAAOlI,EAAAC,EAAAC,cAAC+I,EAAD,OAAoBC,SAASC,eAAe,WL4GlF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzJ,KAAK,SAAA0J,GACjCA,EAAaC","file":"static/js/main.bcef2174.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../Components/Store/actions/authActions'\r\n\r\nconst SignedIn = (props) => {\r\n    \r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">Create Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Logout</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedIn);","export const signIn = (credentials) => {\r\n\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({ type:'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({ type:'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({ type:'SIGNOUT_SUCCESS' });\r\n        })\r\n    }\r\n}\r\nexport const signUp = (newUser) => {\r\n\r\n    return (dispatch,getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst SignedOut = () => {\r\n\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n            \r\n        </ul>\r\n    )\r\n}\r\nexport default SignedOut;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedIn from './SignedIn';\r\nimport SignedOut from './SignedOut';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth,profile } = props;\r\n    const links = auth.uid ? <SignedIn profile={profile} />:<SignedOut />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\" >Home</Link>\r\n                { links }\r\n            </div>\r\n        </nav>  \r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) =>{\r\n    const { notifications } = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item=>{\r\n                            return(\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content} </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                    </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n\r\n    return(\r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React, { Component } from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) =>{ \r\n    return(\r\n\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project =>{\r\n                return(\r\n                    <Link to = {'/project/'+project.id} key={project.id}>\r\n                        <ProjectSummary project = {project} />\r\n                    </Link>\r\n                    \r\n                )\r\n            }) }\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../Projects/ProjectList'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect  } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const {projects, auth, notifications} = this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin' />\r\n        return(\r\n            <div className=\"Dashboard Container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects = {projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth : state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n       \r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects',orderBy:['createdAt','desc']},\r\n        {collection: 'notifications',limit:3,orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project } = props;\r\n    const { auth } = props;\r\n    if(!auth.uid) return <Redirect to= '/signin' />\r\n    if(project){\r\n        return(\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{ project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by { project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n    }else{\r\n        return (\r\n                <div className=\"container center\">\r\n                    <p>Click on Create project to create a project</p>\r\n                </div>\r\n            )\r\n    }\r\n    \r\n}\r\nconst mapStateToProps = (state,ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id]:null\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection : 'projects'\r\n    }])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../Components/Store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError,auth } = this.props;\r\n        if(auth.uid) return <Redirect to= '/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit = {this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">email</label>\r\n                        <input type = \"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">password</label>\r\n                        <input type = \"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{authError}</p>:null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError : state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDisptachToProps = (dispatch) => {\r\n    return {\r\n\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDisptachToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../Components/Store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        lastName:'',\r\n        firstName:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n        \r\n    }\r\n    render() {\r\n        const { auth,authError } = this.props;\r\n        if(auth.uid) return <Redirect to= '/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit = {this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">email</label>\r\n                        <input type = \"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">password</label>\r\n                        <input type = \"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type = \"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type = \"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ?<p>{ authError }</p>:null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return{\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return {\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../Components/Store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state={\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit = {this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">title</label>\r\n                        <input type = \"text\" id=\"title\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return{\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore }) => {\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt:new Date()\r\n        }).then(()=>{\r\n            dispatch({ type :'CREATE_PROJECT', project});\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err})\r\n        })\r\n\r\n        \r\n    }\r\n}","import React, {Component} from 'react';\nimport { BrowserRouter ,Switch, Route } from 'react-router-dom';\nimport Navbar from './Components/Layouts/Navbar';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport ProjectDetails from './Components/Projects/ProjectDetails';\nimport SignIn from './Components/Auth/SignIn';\nimport SignUp from './Components/Auth/SignUp';\nimport CreateProject from './Components/Projects/CreateProject';\n\n\n  class App extends Component {\n    render(){\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path = \"/\" component={Dashboard} />\n              <Route path = \"/project/:id\" component={ ProjectDetails } />\n              <Route path = \"/signin\" component={SignIn} />\n              <Route path =\"/signup\" component={SignUp} />\n              <Route path=\"/create\" component={CreateProject} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n        \n      );\n    }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n\r\n        case 'LOGIN_ERROR':\r\n            console.log('error');\r\n            return {\r\n                ...state,\r\n                authError: 'LOGIN FAILED'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login is successful');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case  'SIGNOUT_SUCCESS':\r\n            console.log(' signout SUCCESS');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n           \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\nexport default authReducer;\r\n","const initState = {\r\n    projects:[\r\n        {id:'1',title:'name is praneeth',content:'it has name'},\r\n        {id:'2',title:'name is praneeth2',content:'it has name'},\r\n        {id:'3',title:'name is praneeth3',content:'it has name'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n\r\n        case 'CREATE_PROJECT':\r\n            console.log(\"created this project\", action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('error occured', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\nexport default rootReducer;"," import firebase from 'firebase/app'\r\n import 'firebase/auth'\r\n import 'firebase/firestore'\r\n\r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyAKlKERfQ2pxfS6deE5Rbg9ytGohlJJyQU\",\r\n    authDomain: \"reactproject-6a831.firebaseapp.com\",\r\n    databaseURL: \"https://reactproject-6a831.firebaseio.com\",\r\n    projectId: \"reactproject-6a831\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"271952437721\",\r\n    appId: \"1:271952437721:web:da3682eea8f4d41a\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore()\r\n\r\n  export default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware ,compose} from 'redux';\nimport rootReducer from './Components/Store/Reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reactReduxFirebase,getFirebase } from 'react-redux-firebase';\nimport {reduxFirestore, getFirestore } from 'redux-firestore';\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer,compose( \n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore\n})),reduxFirestore(fbConfig),reactReduxFirebase(fbConfig, {useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady : true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}